[{"C:\\Apps\\Web\\Projects\\tech-store\\pages\\404.tsx":"1","C:\\Apps\\Web\\Projects\\tech-store\\pages\\cart\\index.tsx":"2","C:\\Apps\\Web\\Projects\\tech-store\\pages\\category\\[id].tsx":"3","C:\\Apps\\Web\\Projects\\tech-store\\pages\\index.tsx":"4","C:\\Apps\\Web\\Projects\\tech-store\\pages\\product\\[id].tsx":"5","C:\\Apps\\Web\\Projects\\tech-store\\pages\\search\\index.tsx":"6","C:\\Apps\\Web\\Projects\\tech-store\\pages\\success\\index.tsx":"7","C:\\Apps\\Web\\Projects\\tech-store\\pages\\_app.tsx":"8","C:\\Apps\\Web\\Projects\\tech-store\\pages\\_document.tsx":"9","C:\\Apps\\Web\\Projects\\tech-store\\components\\Card.tsx":"10","C:\\Apps\\Web\\Projects\\tech-store\\components\\CartProduct.tsx":"11","C:\\Apps\\Web\\Projects\\tech-store\\components\\Category.tsx":"12","C:\\Apps\\Web\\Projects\\tech-store\\components\\Disclaimer.tsx":"13","C:\\Apps\\Web\\Projects\\tech-store\\components\\Filter.tsx":"14","C:\\Apps\\Web\\Projects\\tech-store\\components\\Footer.tsx":"15","C:\\Apps\\Web\\Projects\\tech-store\\components\\Loading.tsx":"16","C:\\Apps\\Web\\Projects\\tech-store\\components\\Location.tsx":"17","C:\\Apps\\Web\\Projects\\tech-store\\components\\Nav.tsx":"18","C:\\Apps\\Web\\Projects\\tech-store\\components\\NavLink.tsx":"19","C:\\Apps\\Web\\Projects\\tech-store\\components\\OrderBy.tsx":"20","C:\\Apps\\Web\\Projects\\tech-store\\components\\Pagination.tsx":"21","C:\\Apps\\Web\\Projects\\tech-store\\components\\Quantity.tsx":"22","C:\\Apps\\Web\\Projects\\tech-store\\components\\Seller.tsx":"23"},{"size":360,"mtime":1656322040082,"results":"24","hashOfConfig":"25"},{"size":1727,"mtime":1655900157244,"results":"26","hashOfConfig":"25"},{"size":4570,"mtime":1656324811105,"results":"27","hashOfConfig":"25"},{"size":1806,"mtime":1655739501523,"results":"28","hashOfConfig":"25"},{"size":5327,"mtime":1656325012498,"results":"29","hashOfConfig":"25"},{"size":2690,"mtime":1656325503364,"results":"30","hashOfConfig":"25"},{"size":334,"mtime":1656321666418,"results":"31","hashOfConfig":"25"},{"size":803,"mtime":1655720883427,"results":"32","hashOfConfig":"25"},{"size":644,"mtime":1655896905907,"results":"33","hashOfConfig":"25"},{"size":1380,"mtime":1655733182329,"results":"34","hashOfConfig":"25"},{"size":2179,"mtime":1656325639566,"results":"35","hashOfConfig":"25"},{"size":628,"mtime":1655720973694,"results":"36","hashOfConfig":"25"},{"size":882,"mtime":1655379743469,"results":"37","hashOfConfig":"25"},{"size":3019,"mtime":1655730630175,"results":"38","hashOfConfig":"25"},{"size":259,"mtime":1655733743092,"results":"39","hashOfConfig":"25"},{"size":250,"mtime":1655725165347,"results":"40","hashOfConfig":"25"},{"size":510,"mtime":1656321630645,"results":"41","hashOfConfig":"25"},{"size":1663,"mtime":1656321300754,"results":"42","hashOfConfig":"25"},{"size":372,"mtime":1654530379273,"results":"43","hashOfConfig":"25"},{"size":1575,"mtime":1655898598971,"results":"44","hashOfConfig":"25"},{"size":849,"mtime":1655301077867,"results":"45","hashOfConfig":"25"},{"size":1151,"mtime":1655572413903,"results":"46","hashOfConfig":"25"},{"size":534,"mtime":1656325890310,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"exm4sk",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Apps\\Web\\Projects\\tech-store\\pages\\404.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\pages\\cart\\index.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\pages\\category\\[id].tsx",["120"],[],"import { useState, useEffect, useCallback } from \"react\"\r\nimport { GetServerSideProps, NextPage } from \"next\"\r\nimport { useLazyQuery } from \"@apollo/client\"\r\n\r\nimport { client } from \"../../services/apollo-client\"\r\nimport { GET_CATEGORY, GET_CATEGORY_FILTERED } from \"../../services/queries\"\r\nimport { IProducts } from \"../../interfaces/interfaces\"\r\n\r\nimport Head from \"next/head\"\r\nimport Card from \"../../components/Card\"\r\nimport Filter from \"../../components/Filter\"\r\nimport Loading from \"../../components/Loading\"\r\nimport OrderBy from \"../../components/OrderBy\"\r\nimport Pagination from \"../../components/Pagination\"\r\nimport Style from \"../../styles/Category.module.css\"\r\n\r\nenum ProductOrderByInput {\r\n  title_ASC = \"title_ASC\",\r\n  price_ASC = \"price_ASC\",\r\n  price_DESC = \"price_DESC\",\r\n}\r\n\r\ninterface ICategory {\r\n  brands: string[]\r\n  id: string\r\n  name: string\r\n  products: IProducts[]\r\n}\r\n\r\ninterface IFilterOpts {\r\n  id: string\r\n  brands: string[]\r\n  minPrice: number\r\n  maxPrice: number\r\n  quantity: number\r\n  isSale: boolean\r\n  orderBy?: ProductOrderByInput\r\n  skip?: number\r\n}\r\n\r\ninterface IProps {\r\n  category: ICategory\r\n  total: number\r\n}\r\n\r\nconst CategoryPage: NextPage<IProps> = ({ category, total }) => {\r\n  const [products, setProducts] = useState<IProducts[]>(category.products)\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const [isFilterOpen, setIsFilterOpen] = useState<boolean>(false)\r\n  const [page, setPage] = useState<number>(0)\r\n  const [filterTotal, setFilterTotal] = useState<number>(total)\r\n  const [orderBy, setOrderBy] = useState<ProductOrderByInput>(\r\n    ProductOrderByInput.title_ASC\r\n  )\r\n  const [filterOpts, setFilterOpts] = useState<IFilterOpts>({\r\n    id: category.id,\r\n    brands: category.brands,\r\n    minPrice: 0,\r\n    maxPrice: 5000,\r\n    quantity: 0,\r\n    isSale: false,\r\n    orderBy: orderBy,\r\n    skip: 10 * page,\r\n  })\r\n  const [runQuery, { data }] = useLazyQuery(GET_CATEGORY_FILTERED, {\r\n    variables: filterOpts,\r\n    fetchPolicy: \"no-cache\",\r\n    notifyOnNetworkStatusChange: true,\r\n    onCompleted: data => {\r\n      if (data.productsConnection.aggregate.count <= 10) {\r\n        setPage(0)\r\n      }\r\n      setFilterTotal(data.productsConnection.aggregate.count)\r\n      setProducts(data.products)\r\n      setIsLoading(false)\r\n    },\r\n  })\r\n\r\n  const handleShowFilter = (): void => {\r\n    if (isFilterOpen) {\r\n      document.body.style.overflow = \"visible\"\r\n    } else {\r\n      document.body.style.overflow = \"hidden\"\r\n    }\r\n\r\n    setIsFilterOpen(!isFilterOpen)\r\n  }\r\n\r\n  const reloadData = useCallback(() => {\r\n    setIsLoading(true)\r\n\r\n    if (isFilterOpen) {\r\n      document.body.style.overflow = \"unset\"\r\n      setIsFilterOpen(false)\r\n    }\r\n\r\n    runQuery({\r\n      variables: { ...filterOpts, orderBy: orderBy, skip: 10 * page },\r\n    })\r\n  }, [orderBy, filterOpts, page])\r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [reloadData])\r\n\r\n  return (\r\n    <section>\r\n      <Head>\r\n        <title>Tech Store | {category.name}</title>\r\n      </Head>\r\n\r\n      <div className={Style.title}>\r\n        <h1>{category.name}</h1>\r\n        <button className={Style.filterbtn} onClick={handleShowFilter}>\r\n          {isFilterOpen ? \"Close\" : \"Filter\"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className={Style.flex}>\r\n        <div\r\n          className={`${Style.filter} ${\r\n            isFilterOpen ? Style.open : Style.close\r\n          }`}>\r\n          <Filter\r\n            id={category.id}\r\n            brands={category.brands}\r\n            setFilterOpts={setFilterOpts}\r\n          />\r\n        </div>\r\n        <div className={Style.products}>\r\n          <OrderBy setOrderBy={setOrderBy} />\r\n\r\n          {isLoading ? (\r\n            <Loading />\r\n          ) : products.length > 0 ? (\r\n            <>\r\n              <div className={Style.grid}>\r\n                {products.map(product => (\r\n                  <Card product={product} key={product.id} />\r\n                ))}\r\n              </div>\r\n              <Pagination setPage={setPage} total={filterTotal} />\r\n            </>\r\n          ) : (\r\n            <p>No results.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = async context => {\r\n  const id = context?.params?.id\r\n\r\n  const { data } = await client.query({\r\n    query: GET_CATEGORY,\r\n    variables: {\r\n      id: id,\r\n      catId: id,\r\n    },\r\n  })\r\n\r\n  return {\r\n    props: {\r\n      category: data.category,\r\n      total: data.productsConnection.aggregate.count,\r\n    },\r\n  }\r\n}\r\n\r\nexport default CategoryPage\r\n","C:\\Apps\\Web\\Projects\\tech-store\\pages\\index.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\pages\\product\\[id].tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\pages\\search\\index.tsx",["121"],[],"import { useState, useEffect, ChangeEvent, useCallback } from \"react\"\r\nimport { GetServerSideProps, NextPage } from \"next\"\r\nimport { useLazyQuery } from \"@apollo/client\"\r\n\r\nimport { client } from \"../../services/apollo-client\"\r\nimport { GET_SEARCH } from \"../../services/queries\"\r\nimport { IProducts } from \"../../interfaces/interfaces\"\r\n\r\nimport Head from \"next/head\"\r\nimport Card from \"../../components/Card\"\r\nimport Loading from \"../../components/Loading\"\r\nimport OrderBy from \"../../components/OrderBy\"\r\nimport Pagination from \"../../components/Pagination\"\r\nimport Style from \"../../styles/Search.module.css\"\r\n\r\ninterface IProps {\r\n  results: IProducts[]\r\n  query: string\r\n  total: number\r\n}\r\n\r\nenum ProductOrderByInput {\r\n  title_ASC = \"title_ASC\",\r\n  price_ASC = \"price_ASC\",\r\n  price_DESC = \"price_DESC\",\r\n}\r\n\r\nconst Search: NextPage<IProps> = ({ results, query, total }) => {\r\n  const [products, setProducts] = useState<IProducts[]>(results)\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const [orderBy, setOrderBy] = useState<ProductOrderByInput>(\r\n    ProductOrderByInput.title_ASC\r\n  )\r\n  const [page, setPage] = useState<number>(0)\r\n  const [runQuery, { data }] = useLazyQuery(GET_SEARCH, {\r\n    variables: {\r\n      query: query,\r\n      orderBy: orderBy,\r\n      skip: 10 * page,\r\n    },\r\n    fetchPolicy: \"no-cache\",\r\n    notifyOnNetworkStatusChange: true,\r\n    onCompleted: data => {\r\n      setProducts(data.products)\r\n      setIsLoading(false)\r\n    },\r\n  })\r\n\r\n  const reloadData = useCallback(() => {\r\n    setIsLoading(true)\r\n    runQuery()\r\n  }, [orderBy, page])\r\n\r\n  useEffect(() => {\r\n    reloadData()\r\n  }, [reloadData])\r\n\r\n  return (\r\n    <section>\r\n      <Head>\r\n        <title>Tech Store | Search: {query}</title>\r\n      </Head>\r\n\r\n      <h1>Search results for &quot;{query}&quot;</h1>\r\n      <OrderBy setOrderBy={setOrderBy} />\r\n\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : products.length > 0 ? (\r\n        <>\r\n          <div className={Style.grid}>\r\n            {products.map(product => (\r\n              <Card product={product} key={product.id} />\r\n            ))}\r\n          </div>\r\n          <Pagination setPage={setPage} total={total} />\r\n        </>\r\n      ) : (\r\n        <p>No results.</p>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = async context => {\r\n  const { query } = context.query\r\n\r\n  const { data } = await client.query({\r\n    query: GET_SEARCH,\r\n    variables: {\r\n      query: query,\r\n    },\r\n  })\r\n\r\n  return {\r\n    props: {\r\n      results: data.products,\r\n      query: query,\r\n      total: data.productsConnection.aggregate.count,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Search\r\n","C:\\Apps\\Web\\Projects\\tech-store\\pages\\success\\index.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\pages\\_app.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\pages\\_document.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Card.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\CartProduct.tsx",["122"],[],"import { useEffect, useState, SyntheticEvent, useCallback } from \"react\"\r\nimport { NextPage } from \"next\"\r\n\r\nimport { ICart } from \"../interfaces/interfaces\"\r\nimport { cartStore } from \"../services/apollo-client\"\r\nimport { displayPrice, removeFromCart, updateCart } from \"../utils\"\r\n\r\nimport Link from \"next/link\"\r\nimport Quantity from \"./Quantity\"\r\nimport Style from \"../styles/components/CartProduct.module.css\"\r\n\r\ninterface IProps {\r\n  cartItem: ICart\r\n}\r\n\r\nconst CartProduct: NextPage<IProps> = ({ cartItem }) => {\r\n  const [quantity, setQuantity] = useState<number>(cartItem.quantity)\r\n  const { product } = cartItem\r\n\r\n  const handleClick = (event: SyntheticEvent<HTMLButtonElement>): void => {\r\n    removeFromCart(event.currentTarget.value)\r\n    cartStore(JSON.parse(localStorage.getItem(\"cart\") || \"[]\"))\r\n  }\r\n\r\n  const cartProductUpdate = useCallback(() => {\r\n    updateCart(product.id, quantity)\r\n    cartStore(JSON.parse(localStorage.getItem(\"cart\") || \"[]\"))\r\n  }, [quantity])\r\n\r\n  useEffect(() => {\r\n    cartProductUpdate()\r\n  }, [cartProductUpdate])\r\n\r\n  return (\r\n    <div className={Style.card}>\r\n      <div className={Style.image}>\r\n        <img src={product.image.url} alt={product.title} />\r\n      </div>\r\n\r\n      <div className={Style.container}>\r\n        <div className={Style.title}>\r\n          <Link href={`/product/${product.id}`}>\r\n            <a className={Style.productlink}>{product.title}</a>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className={Style.info}>\r\n          <div className={Style.quantity}>\r\n            <Quantity\r\n              stock={product.quantity}\r\n              quantity={quantity}\r\n              setQuantity={setQuantity}\r\n            />\r\n\r\n            <p>\r\n              {quantity}x {displayPrice(product.price)}\r\n            </p>\r\n          </div>\r\n\r\n          <div className={Style.subtotal}>\r\n            <p>{displayPrice(product.price * quantity)}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button value={product.id} onClick={handleClick} className={Style.remove}>\r\n        <img src='/tech-store/img/xmark-solid.svg' alt='X' />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartProduct\r\n","C:\\Apps\\Web\\Projects\\tech-store\\components\\Category.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Disclaimer.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Filter.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Footer.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Loading.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Location.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Nav.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\NavLink.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\OrderBy.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Pagination.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Quantity.tsx",[],[],"C:\\Apps\\Web\\Projects\\tech-store\\components\\Seller.tsx",[],[],{"ruleId":"123","severity":1,"message":"124","line":100,"column":6,"nodeType":"125","endLine":100,"endColumn":33,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":52,"column":6,"nodeType":"125","endLine":52,"endColumn":21,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"129","line":28,"column":6,"nodeType":"125","endLine":28,"endColumn":16,"suggestions":"130"},"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'isFilterOpen' and 'runQuery'. Either include them or remove the dependency array.","ArrayExpression",["131"],"React Hook useCallback has a missing dependency: 'runQuery'. Either include it or remove the dependency array.",["132"],"React Hook useCallback has a missing dependency: 'product.id'. Either include it or remove the dependency array.",["133"],{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [isFilterOpen, runQuery, filterOpts, orderBy, page]",{"range":"140","text":"141"},"Update the dependencies array to be: [runQuery]",{"range":"142","text":"143"},"Update the dependencies array to be: [product.id, quantity]",{"range":"144","text":"145"},[2820,2847],"[isFilterOpen, runQuery, filterOpts, orderBy, page]",[1581,1596],"[runQuery]",[978,988],"[product.id, quantity]"]